{"version":3,"file":"fake.js","sourceRoot":"","sources":["../src/fake.ts"],"names":[],"mappings":"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","sourcesContent":["//import * as faker from 'faker';\nconst faker = require('faker');\nimport * as moment from 'moment';\n\nexport function getRandomInt(min:number, max:number) {\n  return faker.random.number({min, max});\n}\n\nexport function getRandomItem<T>(array: ReadonlyArray<T>): T {\n  return array[getRandomInt(0, array.length - 1)];\n}\n\nexport const stdScalarFakers = {\n  'Int': () => faker.random.number({ min: 0, max: 99999, precision: 1 }),\n  'Float': () => faker.random.number({ min: 0, max: 99999, precision: 0.01 }),\n  'String': () => 'string',\n  'Boolean': () => faker.random.boolean(),\n  'ID': () => toBase64(faker.random.number({max: 9999999999}).toString()),\n};\n\nfunction toBase64(str) {\n  return Buffer.from(str).toString('base64');\n}\n\nconst fakeFunctions = {\n  // Address section\n  zipCode: () => faker.address.zipCode(),\n  city: () => faker.address.city(),\n  // Skipped: faker.address.cityPrefix\n  // Skipped: faker.address.citySuffix\n  streetName: () => faker.address.streetName(),\n  streetAddress: {\n    args: ['useFullAddress'],\n    func: (useFullAddress) => faker.address.streetAddress(useFullAddress),\n  },\n  // Skipped: faker.address.streetSuffix\n  // Skipped: faker.address.streetPrefix\n  secondaryAddress: () => faker.address.secondaryAddress(),\n  county: () => faker.address.county(),\n  country: () => faker.address.country(),\n  countryCode: () => faker.address.countryCode(),\n  state: () => faker.address.state(),\n  stateAbbr: () => faker.address.stateAbbr(),\n  latitude: () => faker.address.latitude(),\n  longitude: () => faker.address.longitude(),\n\n  // Commerce section\n  colorName: () => faker.commerce.color(),\n  productCategory: () => faker.commerce.department(),\n  productName: () => faker.commerce.productName(),\n  money: {\n    args: ['minMoney', 'maxMoney', 'decimalPlaces'],\n    func: (min, max, dec) => faker.commerce.price(min, max, dec),\n  },\n  // Skipped: faker.commerce.productAdjective\n  productMaterial: () => faker.commerce.productMaterial(),\n  product: () => faker.commerce.product(),\n\n  // Company section\n  // Skipped: faker.company.companySuffixes\n  companyName: () => faker.company.companyName(),\n  // Skipped: faker.company.companySuffix\n  companyCatchPhrase: () => faker.company.catchPhrase(),\n  companyBs: () => faker.company.bs(),\n  // Skipped: faker.company.catchPhraseAdjective\n  // Skipped: faker.company.catchPhraseDescriptor\n  // Skipped: faker.company.catchPhraseNoun\n  // Skipped: faker.company.companyBsAdjective\n  // Skipped: faker.company.companyBsBuzz\n  // Skipped: faker.company.companyBsNoun\n\n  // Database section\n  dbColumn: () => faker.database.column(),\n  dbType: () => faker.database.type(),\n  dbCollation: () => faker.database.collation(),\n  dbEngine: () => faker.database.engine(),\n\n  // Date section\n  pastDate: {\n    args: ['dateFormat'],\n    func: (dateFormat) => {\n      const date = faker.date.past()\n      return (dateFormat !== undefined ? moment(date).format(dateFormat) : date)\n    }\n  },\n  futureDate: {\n    args: ['dateFormat'],\n    func: (dateFormat) => {\n      const date = faker.date.future()\n      return (dateFormat !== undefined ? moment(date).format(dateFormat) : date)\n    }\n  },\n  recentDate: {\n    args: ['dateFormat'],\n    func: (dateFormat) => {\n      const date = faker.date.recent()\n      return (dateFormat !== undefined ? moment(date).format(dateFormat) : date)\n    }\n  },\n\n  // Finance section\n  financeAccountName: () => faker.finance.accountName(),\n  //TODO: investigate finance.mask\n  financeTransactionType: () => faker.finance.transactionType(),\n  currencyCode: () => faker.finance.currencyCode(),\n  currencyName: () => faker.finance.currencyName(),\n  currencySymbol: () => faker.finance.currencySymbol(),\n  bitcoinAddress: () => faker.finance.bitcoinAddress(),\n  internationalBankAccountNumber: () => faker.finance.iban(),\n  bankIdentifierCode: () => faker.finance.bic(),\n\n  // Hacker section\n  hackerAbbr: () => faker.hacker.itAbbr(),\n  hackerPhrase: () => faker.hacker.phrase(),\n\n  // Image section\n  imageUrl: {\n    args: ['imageWidth', 'imageHeight', 'imageCategory', 'randomizeImageUrl'],\n    func: (width, height, category, randomize) =>\n      faker.image.imageUrl(width, height, category, randomize, false),\n  },\n\n  // Internet section\n  avatarUrl: () => faker.internet.avatar(),\n  email: {\n    args: ['emailProvider'],\n    func: (provider) => faker.internet.email(undefined, undefined, provider),\n  },\n  url: () => faker.internet.url(),\n  domainName: () => faker.internet.domainName(),\n  ipv4Address: () => faker.internet.ip(),\n  ipv6Address: () => faker.internet.ipv6(),\n  userAgent: () => faker.internet.userAgent(),\n  colorHex: {\n    args: ['baseColor'],\n    func: ({red255, green255, blue255}) => {\n      return faker.internet.color(red255, green255, blue255);\n    },\n  },\n  macAddress: () => faker.internet.mac(),\n  password: {\n    args: ['passwordLength'],\n    func: (len) => faker.internet.password(len),\n  },\n\n  // Lorem section\n  lorem: {\n    args: ['loremSize'],\n    func: (size) => faker.lorem[size || 'paragraphs'](),\n  },\n\n  // Name section\n  firstName: () => faker.name.firstName(),\n  lastName: () => faker.name.lastName(),\n  fullName: () => faker.name.findName(),\n  jobTitle: () => faker.name.jobTitle(),\n\n  // Phone section\n  phoneNumber: () => faker.phone.phoneNumber(),\n  // Skipped: faker.phone.phoneNumberFormat\n  // Skipped: faker.phone.phoneFormats\n\n  // Random section\n  number: {\n    args: ['minNumber', 'maxNumber', 'precisionNumber'],\n    func: (min, max, precision) => faker.random.number({ min, max, precision }),\n  },\n  uuid: () => faker.random.uuid(),\n  word: () => faker.random.word(),\n  words: () => faker.random.words(),\n  locale: () => faker.random.locale(),\n\n  // System section\n  // Skipped: faker.system.fileName\n  // TODO: Add ext and type\n  filename: () => faker.system.commonFileName(),\n  mimeType: () => faker.system.mimeType(),\n  // Skipped: faker.system.fileType\n  // Skipped: faker.system.commonFileType\n  // Skipped: faker.system.commonFileExt\n  fileExtension: () => faker.system.fileExt(),\n  semver: () => faker.system.semver(),\n};\n\nObject.keys(fakeFunctions).forEach(key => {\n  var value = fakeFunctions[key];\n  if (typeof fakeFunctions[key] === 'function')\n    fakeFunctions[key] = {args: [], func: value};\n});\n\nexport function fakeValue(type, options?, locale?) {\n  const fakeGenerator = fakeFunctions[type];\n  const argNames = fakeGenerator.args;\n  //TODO: add check\n  const callArgs = argNames.map(name => options[name]);\n\n  const localeBackup = faker.locale;\n  //faker.setLocale(locale || localeBackup);\n  faker.locale = locale || localeBackup;\n  const result = fakeGenerator.func(...callArgs);\n  //faker.setLocale(localeBackup);\n  faker.locale = localeBackup;\n  return result;\n}\n"]}